<UserControl x:Class="DavidSpeck.CSharpDocOutline.DocOutlineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.12.0"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MyToolWindow">
	<UserControl.Resources>
		<Style TargetType="{x:Type ToggleButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ButtonTextKey}}"/>
			<Setter Property="Margin" Value="2,6,2,6"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="bg" BorderThickness="0"
								Padding="4,2,4,2"
								Background="{DynamicResource {x:Static shell:VsBrushes.CommandBarGradientMiddleKey}}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background"
										Value="{DynamicResource {x:Static shell:VsBrushes.HighlightKey}}"
										TargetName="bg" />
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Background"
										Value="{DynamicResource {x:Static shell:VsBrushes.HighlightKey}}"
										TargetName="bg" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CETreeViewItem" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TreeViewItem">
						<StackPanel>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" MinWidth="19" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
											  ClickMode="Press"
											  Name="Expander">
									<ToggleButton.Style>
										<Style TargetType="ToggleButton">
											<Setter Property="UIElement.Focusable" Value="false" />
											<Setter Property="FrameworkElement.Width" Value="16" />
											<Setter Property="FrameworkElement.Height" Value="16" />
											<Setter Property="Control.Template">
												<Setter.Value>
													<ControlTemplate TargetType="ToggleButton">
														<Border Padding="5,5,5,5"
																Background="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}"
																Width="16"
																Height="16">
															<Path Fill="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}"
																	Stroke="{DynamicResource {x:Static shell:VsBrushes.WindowTextKey}}"
																	Name="ExpandPath">
																<Path.Data>
																	<PathGeometry Figures="M0,0L0,6L6,0z" />
																</Path.Data>
																<Path.RenderTransform>
																	<RotateTransform Angle="135" CenterX="3" CenterY="3" />
																</Path.RenderTransform>
															</Path>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="UIElement.IsMouseOver" Value="True">
																<Setter TargetName="ExpandPath" 
																		Property="Shape.Stroke"
																		Value="{DynamicResource {x:Static shell:VsBrushes.HighlightKey}}" />
																<Setter TargetName="ExpandPath"
																		Property="Shape.Fill"
																		Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}" />
															</Trigger>
															<Trigger Property="ToggleButton.IsChecked" Value="True">
																<Setter TargetName="ExpandPath"
																		 Property="UIElement.RenderTransform">
																	<Setter.Value>
																		<RotateTransform Angle="180" CenterX="3" CenterY="3" />
																	</Setter.Value>
																</Setter>
																<Setter TargetName="ExpandPath"
																		Property="Shape.Fill"
																		Value="{DynamicResource {x:Static shell:VsBrushes.ButtonTextKey}}" />
																<Setter TargetName="ExpandPath"
																		Property="Shape.Stroke"
																		Value="{DynamicResource {x:Static shell:VsBrushes.ButtonTextKey}}" />
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>
								<Border x:Name="Bd"
										HorizontalAlignment="Stretch"
										BorderThickness="{TemplateBinding Border.BorderThickness}"
										BorderBrush="{TemplateBinding Border.BorderBrush}"
										Padding="{TemplateBinding Control.Padding}"
										Background="{TemplateBinding Panel.Background}"
										SnapsToDevicePixels="True"
										Grid.Column="1">
									<ContentPresenter x:Name="PART_Header"
														Content="{TemplateBinding HeaderedContentControl.Header}"
														ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
														ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
														ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
														ContentSource="Header"
														HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
														SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>
								<ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
							</Grid>
						</StackPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="TreeViewItem.IsExpanded" Value="False">
								<Setter TargetName="ItemsHost"
										Property="UIElement.Visibility"
										Value="Collapsed" />
							</Trigger>
							<Trigger Property="ItemsControl.HasItems" Value="False">
								<Setter TargetName="Expander"
										Property="UIElement.Visibility"
										Value="Hidden" />
							</Trigger>
							<Trigger Property="TreeViewItem.IsSelected" Value="True">
								<Setter TargetName="Bd"
										Property="Panel.Background"
										Value="{DynamicResource {x:Static shell:VsBrushes.HighlightKey}}" />
								<Setter Property="TextElement.Foreground"
										Value="{DynamicResource {x:Static shell:VsBrushes.HighlightTextKey}}" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="TreeViewItem.IsSelected" Value="True" />
									<Condition Property="Selector.IsSelectionActive" Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="Bd"
										Property="Panel.Background"
										Value="{DynamicResource {x:Static shell:VsBrushes.InactiveBorderKey}}" />
								<Setter Property="TextElement.Foreground"
										Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
							</MultiTrigger>
							<Trigger Property="UIElement.IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.HighlightTextKey}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<Grid>
		<StackPanel Orientation="Vertical">
			<StackPanel Orientation="Horizontal" Background="{DynamicResource {x:Static shell:VsBrushes.CommandBarGradientMiddleKey}}" Name="topBar">
				<ToggleButton Name="sortByLineBtn">
					Sort by line number
				</ToggleButton>
				<ToggleButton Name="sortByKindBtn">
					Sort by kind
				</ToggleButton>
				<ToggleButton Name="sortByNameBtn">
					Sort by name
				</ToggleButton>
			</StackPanel>
			<TreeView Name="outlineTreeView" 
					  Background="{DynamicResource VsBrush.Window}"
					  BorderThickness="0"
					  ItemContainerStyle="{StaticResource CETreeViewItem}">
			</TreeView>
		</StackPanel>
	</Grid>
</UserControl>
